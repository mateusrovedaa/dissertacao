# -*- coding: utf-8 -*-
"""SDT.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1S1nGhBAsVa0OVY8V3fE3Uj97mau-t2Ow
"""

pip install swinging-door

from datetime import datetime
 from pandas import read_csv, DataFrame

 df = DataFrame(
    [
         {
           "Date": datetime.strptime(date, "%m/%d/%Y %I:%M:%S %p"),
         # "Date": datetime.strptime(date, "%m/%d/%Y"),
             "Frequencia": value
         }
         for date, value in read_csv(
             'fc.csv'
         ).values.tolist()
     ]
 )

 #print(len(df))
 #print (df)

 #df.plot(x="Date", y="Frequencia")

from datetime import datetime
import time
t1 = time.time()

def swinging_door_algorithm(data, deviation):
    n = len(data)
    result = [(data[0][0], data[0][1])]
    left = 0

    for right in range(1, n):
        if abs(data[right][1] - data[left][1]) > deviation:
            result.append((data[right][0], data[right][1]))
            left = right

    return result

# Exemplo de uso
data = df.values.tolist()

deviation = 2
#step
filtered_data = swinging_door_algorithm(data, deviation)
#print(filtered_data)
lines = [f"{item[0]} {item[1]}" for item in filtered_data]
tempoExec = time.time() - t1
print("Tempo de execução: {} segundos".format(tempoExec))
#print(lines)

import pandas as pd
from datetime import datetime
from pandas import read_csv, DataFrame

# Use a função zip para dividir os elementos em colunas
dates, values = zip(*filtered_data)

# Agora, 'dates' conterá as datas e 'values' conterá os valores

df2 = pd.DataFrame({'Dates': dates, 'Values': values})
print(len(df2))
print(df2)

df2.to_csv('output_fc.txt', index=False, sep='\t')

# Confirma que o arquivo foi fechado
if arquivo.closed:
    print(f"A lista foi exportada com sucesso para '{nome_arquivo}'.")
    print(f"Deviation= '{deviation}'.")